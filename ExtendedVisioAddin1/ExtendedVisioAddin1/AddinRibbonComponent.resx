<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnInspect.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>